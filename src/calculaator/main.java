/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package calculaator;

/**
 *
 * @author Arin Hanabi
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
    }
    float a, b, c;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button8 = new javax.swing.JButton();
        button7 = new javax.swing.JButton();
        button9 = new javax.swing.JButton();
        button5 = new javax.swing.JButton();
        button6 = new javax.swing.JButton();
        button4 = new javax.swing.JButton();
        button1 = new javax.swing.JButton();
        button3 = new javax.swing.JButton();
        button2 = new javax.swing.JButton();
        equal = new javax.swing.JButton();
        button0 = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        add = new javax.swing.JButton();
        subtract = new javax.swing.JButton();
        time = new javax.swing.JButton();
        divi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        operrand = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        history = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 153, 255));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));

        button8.setText("8");
        button8.setMaximumSize(new java.awt.Dimension(75, 75));
        button8.setMinimumSize(new java.awt.Dimension(75, 75));
        button8.setPreferredSize(new java.awt.Dimension(75, 75));
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        button7.setText("7");
        button7.setMaximumSize(new java.awt.Dimension(75, 75));
        button7.setMinimumSize(new java.awt.Dimension(75, 75));
        button7.setPreferredSize(new java.awt.Dimension(75, 75));
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        button9.setText("9");
        button9.setMaximumSize(new java.awt.Dimension(75, 75));
        button9.setMinimumSize(new java.awt.Dimension(75, 75));
        button9.setPreferredSize(new java.awt.Dimension(75, 75));
        button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button9ActionPerformed(evt);
            }
        });

        button5.setText("5");
        button5.setMaximumSize(new java.awt.Dimension(75, 75));
        button5.setMinimumSize(new java.awt.Dimension(75, 75));
        button5.setPreferredSize(new java.awt.Dimension(75, 75));
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        button6.setText("6");
        button6.setMaximumSize(new java.awt.Dimension(75, 75));
        button6.setMinimumSize(new java.awt.Dimension(75, 75));
        button6.setPreferredSize(new java.awt.Dimension(75, 75));
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        button4.setText("4");
        button4.setMaximumSize(new java.awt.Dimension(75, 75));
        button4.setMinimumSize(new java.awt.Dimension(75, 75));
        button4.setPreferredSize(new java.awt.Dimension(75, 75));
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        button1.setText("1");
        button1.setMaximumSize(new java.awt.Dimension(75, 75));
        button1.setMinimumSize(new java.awt.Dimension(75, 75));
        button1.setPreferredSize(new java.awt.Dimension(75, 75));
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button3.setText("3");
        button3.setMaximumSize(new java.awt.Dimension(75, 75));
        button3.setMinimumSize(new java.awt.Dimension(75, 75));
        button3.setPreferredSize(new java.awt.Dimension(75, 75));
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        button2.setText("2");
        button2.setMaximumSize(new java.awt.Dimension(75, 75));
        button2.setMinimumSize(new java.awt.Dimension(75, 75));
        button2.setPreferredSize(new java.awt.Dimension(75, 75));
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        equal.setText("=");
        equal.setMaximumSize(new java.awt.Dimension(75, 75));
        equal.setMinimumSize(new java.awt.Dimension(75, 75));
        equal.setPreferredSize(new java.awt.Dimension(75, 75));
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });

        button0.setText("0");
        button0.setMaximumSize(new java.awt.Dimension(75, 75));
        button0.setMinimumSize(new java.awt.Dimension(75, 75));
        button0.setPreferredSize(new java.awt.Dimension(75, 75));
        button0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button0ActionPerformed(evt);
            }
        });

        clear.setText("C");
        clear.setMaximumSize(new java.awt.Dimension(75, 75));
        clear.setMinimumSize(new java.awt.Dimension(75, 75));
        clear.setPreferredSize(new java.awt.Dimension(75, 75));
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        add.setText("+");
        add.setMaximumSize(new java.awt.Dimension(75, 75));
        add.setMinimumSize(new java.awt.Dimension(75, 75));
        add.setPreferredSize(new java.awt.Dimension(75, 75));
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        subtract.setText("-");
        subtract.setMaximumSize(new java.awt.Dimension(75, 75));
        subtract.setMinimumSize(new java.awt.Dimension(75, 75));
        subtract.setPreferredSize(new java.awt.Dimension(75, 75));
        subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractActionPerformed(evt);
            }
        });

        time.setText("x");
        time.setMaximumSize(new java.awt.Dimension(75, 75));
        time.setMinimumSize(new java.awt.Dimension(75, 75));
        time.setPreferredSize(new java.awt.Dimension(75, 75));
        time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeActionPerformed(evt);
            }
        });

        divi.setText("/");
        divi.setMaximumSize(new java.awt.Dimension(75, 75));
        divi.setMinimumSize(new java.awt.Dimension(75, 75));
        divi.setPreferredSize(new java.awt.Dimension(75, 75));
        divi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diviActionPerformed(evt);
            }
        });

        output.setColumns(20);
        output.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        output.setLineWrap(true);
        output.setRows(1);
        jScrollPane1.setViewportView(output);

        operrand.setColumns(1);
        operrand.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        operrand.setRows(1);
        jScrollPane2.setViewportView(operrand);

        history.setColumns(20);
        history.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        history.setRows(1);
        jScrollPane3.setViewportView(history);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button0, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(divi, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button0, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(divi, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        button8.getAccessibleContext().setAccessibleName("0");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed
        // TODO add your handling code here:
        switch(output.getText()){
            case "":
                output.setText("8");
                break;
            default :
                output.append("8");
        }
    }//GEN-LAST:event_button8ActionPerformed

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        // TODO add your handling code here:
        switch(output.getText()){
            case "":
                output.setText("7");
                break;
            default :
                output.append("7");
        }
    }//GEN-LAST:event_button7ActionPerformed

    private void button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button9ActionPerformed
        // TODO add your handling code here:
        switch(output.getText()){
            case "":
                output.setText("9");
                break;
            default :
                output.append("9");
        }
    }//GEN-LAST:event_button9ActionPerformed

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
        // TODO add your handling code here:
        switch(output.getText()){
            case "":
                output.setText("5");
                break;
            default :
                output.append("5");
        }
    }//GEN-LAST:event_button5ActionPerformed

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed
        // TODO add your handling code here:
        switch(output.getText()){
            case "":
                output.setText("6");
                break;
            default :
                output.append("6");
        }
    }//GEN-LAST:event_button6ActionPerformed

    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        // TODO add your handling code here:
        switch(output.getText()){
            case "":
                output.setText("4");
                break;
            default :
                output.append("4");
        }
    }//GEN-LAST:event_button4ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
       /* if(output.getText().isEmpty()){
            output.setText("1");
        }
        else{
         output.append("1");
        }*/
        switch(output.getText()){
            case "":
                output.setText("1");
                break;
            default :
                output.append("1");
        }
    }//GEN-LAST:event_button1ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        // TODO add your handling code here:
  
        switch(output.getText()){
            case "":
                output.setText("3");
                break;
            default :
                output.append("3");
        }
    }//GEN-LAST:event_button3ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        // TODO add your handling code here:
        switch(output.getText()){
            case "":
                output.setText("2");
                break;
            default :
                output.append("2");
        }
    }//GEN-LAST:event_button2ActionPerformed

    private void equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalActionPerformed
       switch(operrand.getText()){
           case "+":
               a = Float.parseFloat(history.getText());
               b = Float.parseFloat(output.getText());
               c = a + b;
               output.setText(String.valueOf(c));
               history.setText(null);
               operrand.setText(null);
               break;
           case "-":
               a = Float.parseFloat(history.getText());
               b = Float.parseFloat(output.getText());
               c = a - b;
               output.setText(String.valueOf(c));
               history.setText(null);
               operrand.setText(null);
               break;
           case "x":
               a = Float.parseFloat(history.getText());
               b = Float.parseFloat(output.getText());
               c = a * b;
               output.setText(String.valueOf(c));
               history.setText(null);
               operrand.setText(null);
               break;
           case "/":
               a = Float.parseFloat(history.getText());
               b = Float.parseFloat(output.getText());
               c = a / b;
               output.setText(String.valueOf(c));
               history.setText(null);
               operrand.setText(null);
               break;
       }
    }//GEN-LAST:event_equalActionPerformed

    private void button0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button0ActionPerformed
        // TODO add your handling code here:
        switch(output.getText()){
            case "":
                output.setText("0");
                break;
            default :
                output.append("0");
        }
    }//GEN-LAST:event_button0ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        output.setText(null);
        history.setText(null);
        operrand.setText(null);
    }//GEN-LAST:event_clearActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        switch(operrand.getText()){
            case "" :
                b = Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText("+");
                b = 0;
            case "+":
                b = Float.parseFloat(history.getText()) + Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("+");
                b = 0;
                break;
            case "-":
                b = Float.parseFloat(history.getText()) - Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("+");
                b = 0;
                break;
            case "x":
                b = Float.parseFloat(history.getText()) * Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("+");
                b = 0;
                break;
            case "/":
                b = Float.parseFloat(history.getText()) / Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("+");
                b = 0;
                break;
        }
    }//GEN-LAST:event_addActionPerformed

    private void subtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtractActionPerformed
        // TODO add your handling code here:
        switch(operrand.getText()){
            case "" :
                b = Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText("-");
                b = 0;
            case "+":
                b = Float.parseFloat(history.getText()) + Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("-");
                b = 0;
                break;
            case "-":
                b = Float.parseFloat(history.getText()) - Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("-");
                b = 0;
                break;
            case "x":
                b = Float.parseFloat(history.getText()) * Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("-");
                b = 0;
                break;
            case "/":
                b = Float.parseFloat(history.getText()) / Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("-");
                b = 0;
                break;
        }
       
    }//GEN-LAST:event_subtractActionPerformed

    private void timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeActionPerformed
        // TODO add your handling code here:
        switch(operrand.getText()){
            case "" :
                b = Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText("x");
                b = 0;
            case "+":
                b = Float.parseFloat(history.getText()) + Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("x");
                b = 0;
                break;
            case "-":
                b = Float.parseFloat(history.getText()) - Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("x");
                b = 0;
                break;
            case "x":
                b = Float.parseFloat(history.getText()) * Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("x");
                b = 0;
                break;
            case "/":
                b = Float.parseFloat(history.getText()) / Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("x");
                b = 0;
                break;
        }
        
    }//GEN-LAST:event_timeActionPerformed

    private void diviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diviActionPerformed
        // TODO add your handling code here:
        switch(operrand.getText()){
            case "" :
                b = Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText("/");
                b = 0;
            case "+":
                b = Float.parseFloat(history.getText()) + Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("/");
                b = 0;
                break;
            case "-":
                b = Float.parseFloat(history.getText()) - Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("/");
                b = 0;
                break;
            case "x":
                b = Float.parseFloat(history.getText()) * Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("/");
                b = 0;
                break;
            case "/":
                b = Float.parseFloat(history.getText()) / Float.parseFloat(output.getText());
                history.setText(String.valueOf(b));
                output.setText("0");
                operrand.setText(null);
                operrand.setText("/");
                b = 0;
                break;
        }
       
    }//GEN-LAST:event_diviActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton add;
    private javax.swing.JButton button0;
    private javax.swing.JButton button1;
    private javax.swing.JButton button2;
    private javax.swing.JButton button3;
    private javax.swing.JButton button4;
    private javax.swing.JButton button5;
    private javax.swing.JButton button6;
    private javax.swing.JButton button7;
    private javax.swing.JButton button8;
    private javax.swing.JButton button9;
    private javax.swing.JButton clear;
    public javax.swing.JButton divi;
    public javax.swing.JButton equal;
    private javax.swing.JTextArea history;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTextArea operrand;
    private javax.swing.JTextArea output;
    public javax.swing.JButton subtract;
    public javax.swing.JButton time;
    // End of variables declaration//GEN-END:variables
}
